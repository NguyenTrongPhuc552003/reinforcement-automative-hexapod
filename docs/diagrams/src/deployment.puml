/'
 * Hexapod Project - A Reinforcement Learning-based Autonomous Hexapod
 * Copyright (C) 2025  Nguyen Trong Phuc
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software Foundation,
 * Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
 '/

@startuml deployment

!theme plain
skinparam nodeBackgroundColor #FEFECE
skinparam nodeBorderColor #A80036
skinparam deviceBackgroundColor #FEFECE
skinparam deviceBorderColor #A80036
skinparam artifactBackgroundColor #FEFECE
skinparam artifactBorderColor #A80036
skinparam ArrowColor #A80036

' Physical devices based on the actual hardware configuration
node "BeagleBone AI" as sbc {
  frame "User Space" {
    artifact "Applications" as app {
      artifact "hexapod_app" #ADD8E6
      artifact "test_servo"
      artifact "test_movement"
      artifact "test_balance"
      artifact "test_calibration"
      artifact "test_mpu6050"
      artifact "pytd3_deploy" #ADD8E6
    }
    
    ' Direct connection from applications to device nodes without middleware libraries
  }
  
  frame "Kernel Space" {
    artifact "Kernel Modules" as driver {
      artifact "hexapod_driver.ko" #ADD8E6
      artifact "pca9685.ko" #ADD8E6
      artifact "mpu6050.ko" #ADD8E6
      artifact "servo.ko" #ADD8E6
    }
    
    artifact "Device Nodes" as device {
      file "/dev/hexapod" #ADD8E6
      file "/dev/i2c-3"
    }
  }
  
  artifact "Configuration" as config {
    file "~/.config/hexapod/calibration.cfg" #ADD8E6
  }
}

artifact "PWM Controllers" as pca9685 {
  artifact "PCA9685 Primary (0x40)" #ADD8E6
  artifact "PCA9685 Secondary (0x41)" #ADD8E6
}

artifact "IMU Sensor" as mpu6050 {
  artifact "MPU6050 (0x68)" #ADD8E6
}

artifact "Servo Motors (18x)" as servos {
  frame "Left Side" {
    artifact "Front Left (3x)"
    artifact "Middle Left (3x)"
    artifact "Rear Left (3x)"
  }
  frame "Right Side" {
    artifact "Front Right (3x)" 
    artifact "Middle Right (3x)"
    artifact "Rear Right (3x)"
  }
}

' Connections based on actual system architecture
app --> device : <<reads/writes>>
device --> driver : <<managed by>>
driver --> pca9685 : <<I2C@0x40,0x41>>
driver --> mpu6050 : <<I2C@0x68>>
pca9685 --> servos : <<PWM signals>>

' Notes based on code documentation
note right of app
  C++ applications that provide:
  - Manual control
  - Autonomous movement
  - Calibration utilities 
  - TD3 reinforcement learning
end note

note right of driver
  Kernel modules handle:
  - I2C communication
  - PWM signal generation
  - Servo positioning
  - IMU data acquisition
end note

note bottom of servos
  18 servos total:
  - 6 hip joints
  - 6 knee joints
  - 6 ankle joints
  Each controlled through PWM signals
end note

@enduml