/'
 * Hexapod Project - A Reinforcement Learning-based Autonomous Hexapod
 * Copyright (C) 2025  Nguyen Trong Phuc
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software Foundation,
 * Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
 '/

@startuml sequence
!theme plain

title <font size=20><b>Hexapod Robot - Operation Sequence</b></font>
left header Version 1.0 - Reinforcement Learning Autonomous Hexapod
right header BeagleBone Black Platform

skinparam {
    SequenceArrowThickness 1.5
    SequenceGroupBodyBackgroundColor #F5F5F5
    SequenceGroupBorderColor #888888
    SequenceLifeLineBorderColor #666666
    SequenceLifeLineBackgroundColor #FEFEFE
    ParticipantBorderColor #666666
    ParticipantBackgroundColor #FEFECE
    ActorBorderColor #666666
    ActorBackgroundColor #FEFECE
    defaultFontName Arial
    NoteBorderColor #888888
    NoteBackgroundColor #FFFFDD
    SequenceGroupFontStyle bold
    SequenceGroupFontSize 14
    SequenceBoxBackgroundColor #E0EFEF
}

' Participants with more meaningful names and grouping
actor "User" as User
box "Software Layer" #EEEEFF
    participant "Application" as App
    participant "CPG Controller" as CPGCtrl
    participant "CPG Network" as CPGNet
    participant "CPG Oscillators" as CPGOsc
    participant "Balance System" as BalSys
    participant "Hardware Interface" as Hexapod
endbox

box "Hardware Layer" #FFE8E8
    participant "Kernel Driver" as Driver
    participant "Physical Hardware" as Hardware
endbox

' Title with better description
title Hexapod Robot System - Operation Sequence with Hardware Focus

' Startup sequence with clearer hardware interactions
group "System Initialization"
    User -> App: launch application
    activate App
    
    App -> Hexapod: initialize hardware interface
    activate Hexapod
    
    note right of Hexapod: Hardware interface opens communication\nwith the kernel driver
    Hexapod -> Driver: open device ("/dev/hexapod")
    activate Driver
    
    Driver -> Hardware: initialize hardware components
    activate Hardware
    note right of Hardware: Powers up servos and sensors
    note right of Hardware: Sets PWM controllers to 50Hz
    note right of Hardware: Configures I2C communication
    Hardware --> Driver: initialization complete
    deactivate Hardware
    
    Driver --> Hexapod: file descriptor for I/O operations
    deactivate Driver
    
    Hexapod --> App: hardware interface ready
    deactivate Hexapod
    
    App -> CPGCtrl: initialize CPG controller
    activate CPGCtrl
    CPGCtrl -> CPGNet: initialize oscillator network
    activate CPGNet
    CPGNet -> CPGOsc: create 6 coupled oscillators
    activate CPGOsc
    note right of CPGOsc: Each oscillator represents one leg\nwith Hopf dynamics for biological gait patterns
    CPGOsc --> CPGNet: oscillators ready
    deactivate CPGOsc
    note right of CPGNet: Sets up hexapod topology with\ncoupling matrix for coordinated locomotion
    CPGNet --> CPGCtrl: network initialized
    deactivate CPGNet
    CPGCtrl --> App: CPG controller ready
    deactivate CPGCtrl
    
    App -> BalSys: initialize balance system
    activate BalSys
    BalSys --> App: balance system ready
    deactivate BalSys
    
    ' Center legs at startup - important hardware interaction
    App -> Hexapod: position legs in centered pose
    activate Hexapod
    Hexapod -> Driver: ioctl(HEXAPOD_IOCTL_CENTER_ALL)
    activate Driver
    
    note right of Driver: Driver processes center-all command\nand translates to hardware signals
    
    Driver -> Hardware: send PWM signals to center all servos
    activate Hardware
    note right of Hardware: All 18 servos receive 1.5ms pulses\n(neutral position at 0 degrees)
    Hardware --> Driver: servos positioned
    deactivate Hardware
    
    Driver --> Hexapod: operation complete
    deactivate Driver
    
    Hexapod --> App: legs centered
    deactivate Hexapod
    
    App --> User: system ready for operation
end

' Main operation loop with enhanced hardware details
group "Operation Cycle"
    loop while system is running
        User -> App: input command (key press)
        activate App
        
        App -> CPGCtrl: update(deltaTime, input)
        activate CPGCtrl
        
        CPGCtrl -> CPGNet: update network state
        activate CPGNet
        
        loop for each oscillator (6 legs)
            CPGNet -> CPGOsc: update oscillator with coupling
            activate CPGOsc
            note right of CPGOsc: Hopf oscillator dynamics:\nẋ = (μ - r²)x - ωy + coupling_input\nẏ = (μ - r²)y + ωx
            CPGOsc --> CPGNet: oscillator output
            deactivate CPGOsc
        end
        
        CPGNet -> CPGNet: compute network synchronization
        CPGNet --> CPGCtrl: network output (joint positions)
        deactivate CPGNet
        
        CPGCtrl -> BalSys: apply balance feedback from IMU
        activate BalSys
        BalSys --> CPGCtrl: balance corrections
        deactivate BalSys
        
        loop for each leg (6 legs)
            CPGCtrl -> Hexapod: setLegPosition(leg, cpg_angles)
            activate Hexapod
            
            Hexapod -> Driver: ioctl(HEXAPOD_IOCTL_SET_LEG, leg_cmd)
            activate Driver
            note right of Driver: Driver converts CPG outputs\nto PWM timing values
            
            Driver -> Hardware: set PWM signals for leg servos
            activate Hardware
            note right of Hardware: Biologically-inspired coordination:\n- Phase relationships ensure stability\n- Smooth transitions between gaits\n- Natural obstacle response
            Hardware --> Driver: PWM signals updated
            deactivate Hardware
            
            Driver --> Hexapod: leg position updated
            deactivate Driver
            Hexapod --> CPGCtrl: position set
            deactivate Hexapod
        end
        
        CPGCtrl -> CPGCtrl: handle autonomous navigation
        note right of CPGCtrl: Process ultrasonic sensor data\nfor obstacle avoidance
        
        CPGCtrl --> App: CPG cycle complete
        deactivate CPGCtrl
        
        App -> App: update telemetry display
        
        ' Maintain timing with sleep
        App -> App: sleep to maintain target frame rate
        
        App --> User: updated robot state
        deactivate App
    end
end

' Shutdown sequence with hardware details
group "System Shutdown"
    User -> App: terminate application (quit command)
    activate App
    
    ' Safe shutdown - center legs
    App -> Hexapod: center all legs for safe shutdown
    activate Hexapod
    
    Hexapod -> Driver: ioctl(HEXAPOD_IOCTL_CENTER_ALL)
    activate Driver
    
    note right of Driver: Driver prepares for safe shutdown\nby positioning all legs in neutral stance
    
    Driver -> Hardware: set all servos to center position
    activate Hardware
    note right of Hardware: All servos return to 1.5ms pulse width\n(neutral position)
    Hardware --> Driver: servos centered
    deactivate Hardware
    
    Driver --> Hexapod: centering complete
    deactivate Driver
    
    Hexapod --> App: robot in safe position
    deactivate Hexapod
    
    ' Release hardware resources
    App -> Hexapod: release hardware resources
    activate Hexapod
    
    Hexapod -> Driver: close(fd)
    activate Driver
    note right of Driver: Driver performs cleanup:\n- Disables PWM outputs\n- Puts IMU in sleep mode\n- Releases I2C bus
    Driver --> Hexapod: resources released
    deactivate Driver
    
    Hexapod --> App: cleanup complete
    deactivate Hexapod
    
    App -> App: exit(0)
    App --> User: application terminated
    deactivate App
end

' Footer
legend right
  <b>Hexapod Robot System Operation</b>
  --
  Hardware Layer Details:
  • 18 Servos (3 per leg) via PCA9685 PWM controllers
  • MPU6050 IMU for orientation sensing
  • HC-SR04 Ultrasonic sensor for obstacle detection
  • I2C bus communication (address 0x40, 0x41, 0x68)
  • 50Hz PWM signal for servo control (1-2ms pulse width)
  
  CPG System Features:
  • Biological-inspired Hopf oscillators for each leg
  • Adaptive coupling for gait coordination
  • Real-time balance feedback integration
  • Autonomous navigation with obstacle avoidance
  • Smooth gait transitions (tripod, wave, ripple)
endlegend

@enduml